# R_code_exam_LaviniaAngelucci


#PAYPAL
#paolo.patrizio7@gmail.com


INVESTIGHIAMO UN OGGETTO PRIMA DI INIZIARE UN PROGETTO 
# PROVA NUMERO 1 --------------------------------------------------------------------
#settiamo la working directory
#library(raster)
#setwd("C:/pt/")

# usiamo la funzione brick per importare l'immagine 043 laguna di venezia in pt su :C
#laguna_13a_02g <- brick("043.jpg")

# names      : X043.1, X043.2, X043.3  queste sono le bande 
# crs        : NA NON è GEOREFERENZIATA!!!!!

#plottiamo l'immagine
#plot(laguna_13a_02g)
# si evidenzia una differenza a livello dell'acqua, potrebbe essere torbidità? lo andiamo a scoprire dopo 
# può essere che la torbidità rifletta di più in una di quelle tre bande x043.1 x043.2 x043.3

# conviene utilizzare la funzione RGB in quanto partiamo da una immagine "reale" 
# nota che in questo caso la banda near infrared non è possibile inserirla (perchè banda 4)
#plotRGB(laguna_13a_02g, r=3, g=2, b=1)
#plotrgb
#plotRGB(laguna_13a_02g)
#----------------------------------------------------------------------------------------



#settiamo la working directory sia la library raster che rgdal

library(raster)
setwd("C:/pt/")
library(rgdal)
library(gridExtra)
library(RStoolbox)
library(ggplot2)


# PROVO CON IMMAGINE GEOREFERENZIATA SU QGIS 

# chiamo lo shapefile precedentemente georeferenziato su gis (questo è lo shape file poligono del crop solo su acqua) 
# verrà applicato su immagini fg2a fg2b fg2c ovvero 20 febbraio, 11 marzo, 19 marzo 2020
readOGR("files lavinia angelucci.shp")

# rinomino lo shape file (questo è solo il poligono)
lagoon_shp <- readOGR ("files lavinia angelucci.shp")

#plotto il poligono, ossiamo il crop della laguna **guarda riga 46**
# plot(lagoon_shp)

# importo l'immagine del 11 marzo fg2b georeferenziata su qgis con sistema di riferimento wags84 coordinate 4326
# fg2b_mar11<- brick("fig2b_wgs84.tif")

# controllo le proprietà dell'immagine, ORA è GEOREFERENZIATA!!!!
fg2b_mar11
#class      : RasterBrick 
#Dimensions : 712, 388, 276256, 3  (nrow, ncol, ncell, nlayers)
#resolution : 1, 1  (x, y)
#extent     : 0, 388, -712, 0  (xmin, xmax, ymin, ymax)
#crs        : +proj=longlat +datum=WGS84 +no_defs 
#source     : C:/pt/fig2b_wgs84.tif 
#names      : fig2b_wgs84.1, fig2b_wgs84.2, fig2b_wgs84.3 
#min values :             0,             0,             0 
#max values :           255,           255,           255 

# faccio la stessa cosa con fig2a 20febbraio, 11marzo e 19marzo
fg2a_feb20<- brick("fig2a_wgs84.tif")
fg2a_marz11<- brick("fig2b_wgs84.tif")
fg2a_marz19<- brick("fig2c_wgs84.tif")

# ho georeferenziato tutte le immagini fg2a fg2b fg2c
# plot(nome dell'immagine,add=TRUE) plotta cose una sopra l'altra 

# plotto le immagini con RGB 
plotRGB(fg2a_feb20, r=3, g=2, b=1, stretch="Lin")
plotRGB(fg2a_marz11, r=3, g=2, b=1, stretch="Lin")
plotRGB(fg2a_marz19, r=3, g=2, b=1, stretch="Lin")

#carico le library 
#library(RStoolbox)
#library(ggplot2)
#library(gridExtra)

# plotto con ggRGB
ggRGB(fg2a_feb20,1,3,2, stretch="lin")
ggRGB(fg2a_marz11,1,3,2, stretch="lin")
ggRGB(fg2a_marz19,1,3,2, stretch="lin")

# usiamo la funzione grid arrange per plottare inseme e poi provo con PAR
p1 <-  ggRGB(fg2a_feb20,1,3,2, stretch="lin")
p2 <-  ggRGB(fg2a_marz11,1,3,2, stretch="lin")
p3 <-  ggRGB(fg2a_marz19,1,3,2, stretch="lin")

#faccio grid.arrange
grid.arrange(p1, p2, p3, mrow=1)

#lagoon_shp <- readOGR ("files lavinia angelucci.shp")

#così NON FUNZIONAA
# p1_cropped <- ggRGB(fg2a_feb20,1,3,2, stretch="lin")
#p2_cropped <-  ggRGB(fg2a_marz11,1,3,2, stretch="lin")
#p3_cropped <-  ggRGB(fg2a_marz19,1,3,2, stretch="lin")
 
# crop(p1_cropped, lagoon_shp)
# fai finta sia un'immagine normale con 3 bande ma croppata DEVI TRATTARLA COME IMMAGINE INTERA NON LA RINOMINARE --> (crop(fg2a_feb20,lagoon_shp))
# plot(crop(fg2a_feb20,lagoon_shp)) FUNZIONA

# rinomino le immagini croppate
p1_cropped <- ggRGB(crop(fg2a_feb20,lagoon_shp),1,3,2, stretch="lin")
p2_cropped <- ggRGB(crop(fg2a_marz11,lagoon_shp),1,3,2, stretch="lin")
p3_cropped <- ggRGB(crop(fg2a_marz19,lagoon_shp),1,3,2, stretch="lin")

# plotto le immagini croppate
plot(p1_cropped)
plot(p2_cropped)
plot(p3_cropped)

#  unsuperclass n=3 classi
set.seed(25)
p1_unclass <- unsuperClass(fg2a_feb20, nClasses=5)
p2_unclass <- unsuperClass(fg2a_marz11, nClasses=5)
p3_unclass <- unsuperClass(fg2a_marz19, nClasses=5)

#plotta con par

set.seed(25)
 par(mfrow=c(1,3))
plot(p1_unclass$map)
plot(p2_unclass$map)
plot(p3_unclass$map)

# IMMAGINI UNSUPER CLASS CROPPATE
plot(crop(p1_unclass$map,lagoon_shp))
plot(crop(p2_unclass$map,lagoon_shp))
plot(crop(p3_unclass$map,lagoon_shp))

# funzione PAR metto tutte le immagini insieme
par(mfrow=c(1,3))
plot(crop(p1_unclass$map,lagoon_shp))
plot(crop(p2_unclass$map,lagoon_shp))
plot(crop(p3_unclass$map,lagoon_shp))





#PCA, analisi multivariata
#you take a dataset with many variables, and you simplify that dataset by turning your original variables into a smaller number of "Principal Components".

#installa pacchetto
install.packages("viridis")
library (viridis)
library(raster)
setwd("C:/pt/")
library(rgdal)
library(gridExtra)
library(RStoolbox)
library(ggplot2)



#MARZO 11  PCA 
fg2a_marz11<- brick("fig2b_wgs84.tif")
#(fg2a_marz11)
marz11_pca <- rasterPCA(fg2a_marz11)
#marz11_pca <- fg2a_marz11$map$PC1
plot(marz11_pca$map)

#plot con crop
#plot(crop(marz11_pca$map,lagoon_shp))

#FOCAL MOVING WINDOW
marz11_pc1 <- marz11_pca$map$PC1
marz11_mw <- focal (marz11_pc1, w=matrix(1/9, nrow=3, ncol=3), fun=sd)
clsd <- colorRampPalette(c('blue','green','pink','magenta','orange','brown','red','yellow'))(100)
plot(marz11_mw, col=clsd)


# FEBBRAIO 20 PCA
fg2a_feb20<- brick("fig2a_wgs84.tif")
#(fg2a_feb20)
feb20_pca <- rasterPCA(fg2a_feb20)
#feb20_pca <- fg2a_feb20$map$PC1
plot(feb20_pca$map)

#plot con crop
#plot(crop(marz11_pca$map,lagoon_shp))

#FOCAL MOVING WINDOW
feb20_pc1 <- feb20_pca$map$PC1
feb20_mw <- focal (feb20_pc1, w=matrix(1/9, nrow=3, ncol=3), fun=sd)
clsd <- colorRampPalette(c('blue','green','pink','magenta','orange','brown','red','yellow'))(100)
plot(feb20_mw, col=clsd)


# MARZO 19
fg2a_marz19<- brick("fig2c_wgs84.tif")
marz19_pca <- rasterPCA(fg2a_marz19)
#marz19_pc1 <- marz19_pca$map$PC1
plot(marz19_pca$map)



plot(feb20_pca) <- (feb20_pca$map)
plot(marz11_pca) <- (marz11_pca$map)
plot(marz19_pca) <- (marz19_pca$map)


plot(feb20_pca) 
plot(marz11_pca) 
plot(marz19_pca)

#NON VA
#par(mfrow=c(4,1))
#plot(feb20_pca$map)
#plot(marz11_pca$map)
#plot(marz19_pca$map)
#NON VA
#grid.arrange(feb20_pca, marz11_pca, marz19_pca, nrow=12)

#FOCAL MOVING WINDOW
marz19_pc1 <- marz19_pca$map$PC1
marz19_mw <- focal (marz19_pc1, w=matrix(1/9, nrow=3, ncol=3), fun=sd)
clsd <- colorRampPalette(c('blue','green','pink','red','orange','yellow'))(100)
plot(marz19_mw, col=clsd)


# faccio un PAR SENZA cropped clramp MOVING WINDOW
par(mfrow=c(1,3))
plot(feb20_mw, col=clsd)
plot(marz11_mw, col=clsd)
plot(marz19_mw, col=clsd)


#PLOT CROPPATO FEB20 MARZ11 MARZ19 MOVING WINDOW
lagoon_shp <- readOGR ("files lavinia angelucci.shp")
clsd <- colorRampPalette(c('blue','green','pink','red','orange','yellow'))(100)

feb20mw_cropped <- crop(feb20_mw,lagoon_shp)
plot(feb20mw_cropped, col=clsd)

marz11mw_cropped <- (crop(marz11_mw,lagoon_shp))
plot(marz11mw_cropped, col=clsd)

marz19mw_cropped <- (crop(marz19_mw,lagoon_shp))
plot(marz19mw_cropped, col=clsd)


#PAR cropped clramp MOVING WINDOW
par(mfrow=c(1,3))
plot(feb20mw_cropped, col=clsd)
plot(marz11mw_cropped, col=clsd)
plot(marz19mw_cropped, col=clsd)


#SUMMARY DELLE COMPONENTI NON CROPPED
summary(feb20_pca$model) 
#                            Comp.1      Comp.2      Comp.3
#Standard deviation     112.4212153 32.41154082 7.839134229
#Proportion of Variance   0.9191331  0.07639786 0.004469079
#Cumulative Proportion    0.9191331  0.99553092 1.000000000

summary(marz19_pca$model)
#                           Comp.1      Comp.2      Comp.3
#Standard deviation     69.6829683 21.23681719 7.128451679
#Proportion of Variance  0.9063343  0.08418098 0.009484742
#Cumulative Proportion   0.9063343  0.99051526 1.000000000

summary(marz11_pca$model)
#                           Comp.1      Comp.2      Comp.3
#Standard deviation     90.6106865 22.61181338 5.727743638
#Proportion of Variance  0.9378482  0.05840426 0.003747493
#Cumulative Proportion   0.9378482  0.99625251 1.000000000




# SUMMARY DELLE COMPONENTI CROPPATO --> VALORI SOLO DI ACQUA

# FEBBRAIO 20
crop(feb20_pca$map,lagoon_shp)
#plot(crop(feb20_pca$map,lagoon_shp))
feb20crop <- crop(feb20_pca$map,lagoon_shp)
feb20crop_pca <- rasterPCA(feb20crop)

summary(feb20crop_pca$model)
#                            Comp.1      Comp.2      Comp.3
#Standard deviation     104.6909160 27.94909281 7.469126723
#Proportion of Variance   0.9290556  0.06621542 0.004728935
#Cumulative Proportion    0.9290556  0.99527106 1.000000000

# MARZO 19
crop(marz19_pca$map,lagoon_shp)
#plot(crop(marz19_pca$map,lagoon_shp))
marz19crop <- crop(marz19_pca$map,lagoon_shp)
marz19crop_pca <- rasterPCA(marz19crop)

summary(marz19crop_pca$model)
#                           Comp.1      Comp.2      Comp.3
#Standard deviation     64.2115564 18.79066226 6.541294697
#Proportion of Variance  0.9123971  0.07813429 0.009468582
#Cumulative Proportion   0.9123971  0.99053142 1.000000000

#MARZO 11
crop(marz11_pca$map,lagoon_shp)
#plot(crop(marz11_pca$map,lagoon_shp))
marz11crop <- crop(marz11_pca$map,lagoon_shp)
marz11crop_pca <- rasterPCA(marz11crop)

summary(marz19crop_pca$model)
#                          Comp.1      Comp.2      Comp.3
#Standard deviation     64.2115564 18.79066226 6.541294697
#Proportion of Variance  0.9123971  0.07813429 0.009468582
#Cumulative Proportion   0.9123971  0.99053142 1.000000000





